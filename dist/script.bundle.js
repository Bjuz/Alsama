/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/script.js":
/*!***********************!*\
  !*** ./src/script.js ***!
  \***********************/
/***/ (() => {

eval("function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}const ANIMATION_DURATION = 300;\r\n\r\nconst SIDEBAR_EL = document.getElementById(\"sidebar\");\r\n\r\nconst SUB_MENU_ELS = document.querySelectorAll(\r\n\".menu > ul > .menu-item.sub-menu\");\r\n\r\n\r\nconst FIRST_SUB_MENUS_BTN = document.querySelectorAll(\r\n\".menu > ul > .menu-item.sub-menu > a\");\r\n\r\n\r\nconst INNER_SUB_MENUS_BTN = document.querySelectorAll(\r\n\".menu > ul > .menu-item.sub-menu .menu-item.sub-menu > a\");\r\n\r\n\r\nclass PopperObject {\r\n\r\n\r\n\r\n\r\n  constructor(reference, popperTarget) {_defineProperty(this, \"instance\", null);_defineProperty(this, \"reference\", null);_defineProperty(this, \"popperTarget\", null);\r\n    this.init(reference, popperTarget);\r\n  }\r\n\r\n  init(reference, popperTarget) {\r\n    this.reference = reference;\r\n    this.popperTarget = popperTarget;\r\n    this.instance = Popper.createPopper(this.reference, this.popperTarget, {\r\n      placement: \"right\",\r\n      strategy: \"fixed\",\r\n      resize: true,\r\n      modifiers: [\r\n      {\r\n        name: \"computeStyles\",\r\n        options: {\r\n          adaptive: false } },\r\n\r\n\r\n      {\r\n        name: \"flip\",\r\n        options: {\r\n          fallbackPlacements: [\"left\", \"right\"] } }] });\r\n\r\n\r\n\r\n\r\n\r\n    document.addEventListener(\r\n    \"click\",\r\n    e => this.clicker(e, this.popperTarget, this.reference),\r\n    false);\r\n\r\n\r\n    const ro = new ResizeObserver(() => {\r\n      this.instance.update();\r\n    });\r\n\r\n    ro.observe(this.popperTarget);\r\n    ro.observe(this.reference);\r\n  }\r\n\r\n  clicker(event, popperTarget, reference) {\r\n    if (\r\n    SIDEBAR_EL.classList.contains(\"collapsed\") &&\r\n    !popperTarget.contains(event.target) &&\r\n    !reference.contains(event.target))\r\n    {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this.instance.state.elements.popper.style.visibility = \"hidden\";\r\n  }}\r\n\r\n\r\nclass Poppers {\r\n\r\n\r\n  constructor() {_defineProperty(this, \"subMenuPoppers\", []);\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    SUB_MENU_ELS.forEach(element => {\r\n      this.subMenuPoppers.push(\r\n      new PopperObject(element, element.lastElementChild));\r\n\r\n      this.closePoppers();\r\n    });\r\n  }\r\n\r\n  togglePopper(target) {\r\n    if (window.getComputedStyle(target).visibility === \"hidden\")\r\n    target.style.visibility = \"visible\";else\r\n    target.style.visibility = \"hidden\";\r\n  }\r\n\r\n  updatePoppers() {\r\n    this.subMenuPoppers.forEach(element => {\r\n      element.instance.state.elements.popper.style.display = \"none\";\r\n      element.instance.update();\r\n    });\r\n  }\r\n\r\n  closePoppers() {\r\n    this.subMenuPoppers.forEach(element => {\r\n      element.hide();\r\n    });\r\n  }}\r\n\r\n\r\nconst slideUp = (target, duration = ANIMATION_DURATION) => {\r\n  const { parentElement } = target;\r\n  parentElement.classList.remove(\"open\");\r\n  target.style.transitionProperty = \"height, margin, padding\";\r\n  target.style.transitionDuration = `${duration}ms`;\r\n  target.style.boxSizing = \"border-box\";\r\n  target.style.height = `${target.offsetHeight}px`;\r\n  target.offsetHeight;\r\n  target.style.overflow = \"hidden\";\r\n  target.style.height = 0;\r\n  target.style.paddingTop = 0;\r\n  target.style.paddingBottom = 0;\r\n  target.style.marginTop = 0;\r\n  target.style.marginBottom = 0;\r\n  window.setTimeout(() => {\r\n    target.style.display = \"none\";\r\n    target.style.removeProperty(\"height\");\r\n    target.style.removeProperty(\"padding-top\");\r\n    target.style.removeProperty(\"padding-bottom\");\r\n    target.style.removeProperty(\"margin-top\");\r\n    target.style.removeProperty(\"margin-bottom\");\r\n    target.style.removeProperty(\"overflow\");\r\n    target.style.removeProperty(\"transition-duration\");\r\n    target.style.removeProperty(\"transition-property\");\r\n  }, duration);\r\n};\r\nconst slideDown = (target, duration = ANIMATION_DURATION) => {\r\n  const { parentElement } = target;\r\n  parentElement.classList.add(\"open\");\r\n  target.style.removeProperty(\"display\");\r\n  let { display } = window.getComputedStyle(target);\r\n  if (display === \"none\") display = \"block\";\r\n  target.style.display = display;\r\n  const height = target.offsetHeight;\r\n  target.style.overflow = \"hidden\";\r\n  target.style.height = 0;\r\n  target.style.paddingTop = 0;\r\n  target.style.paddingBottom = 0;\r\n  target.style.marginTop = 0;\r\n  target.style.marginBottom = 0;\r\n  target.offsetHeight;\r\n  target.style.boxSizing = \"border-box\";\r\n  target.style.transitionProperty = \"height, margin, padding\";\r\n  target.style.transitionDuration = `${duration}ms`;\r\n  target.style.height = `${height}px`;\r\n  target.style.removeProperty(\"padding-top\");\r\n  target.style.removeProperty(\"padding-bottom\");\r\n  target.style.removeProperty(\"margin-top\");\r\n  target.style.removeProperty(\"margin-bottom\");\r\n  window.setTimeout(() => {\r\n    target.style.removeProperty(\"height\");\r\n    target.style.removeProperty(\"overflow\");\r\n    target.style.removeProperty(\"transition-duration\");\r\n    target.style.removeProperty(\"transition-property\");\r\n  }, duration);\r\n};\r\n\r\nconst slideToggle = (target, duration = ANIMATION_DURATION) => {\r\n  if (window.getComputedStyle(target).display === \"none\")\r\n  return slideDown(target, duration);\r\n  return slideUp(target, duration);\r\n};\r\n\r\nconst PoppersInstance = new Poppers();\r\n\r\n/**\r\n * wait for the current animation to finish and update poppers position\r\n */\r\nconst updatePoppersTimeout = () => {\r\n  setTimeout(() => {\r\n    PoppersInstance.updatePoppers();\r\n  }, ANIMATION_DURATION);\r\n};\r\n\r\n/**\r\n * sidebar collapse handler\r\n */\r\ndocument.getElementById(\"btn-collapse\").addEventListener(\"click\", () => {\r\n  SIDEBAR_EL.classList.toggle(\"collapsed\");\r\n  PoppersInstance.closePoppers();\r\n  if (SIDEBAR_EL.classList.contains(\"collapsed\"))\r\n  FIRST_SUB_MENUS_BTN.forEach(element => {\r\n    element.parentElement.classList.remove(\"open\");\r\n  });\r\n\r\n  updatePoppersTimeout();\r\n});\r\n\r\n/**\r\n * sidebar toggle handler (on break point )\r\n */\r\ndocument.getElementById(\"btn-toggle\").addEventListener(\"click\", () => {\r\n  SIDEBAR_EL.classList.toggle(\"toggled\");\r\n\r\n  updatePoppersTimeout();\r\n});\r\n\r\n/**\r\n * toggle sidebar on overlay click\r\n */\r\ndocument.getElementById(\"overlay\").addEventListener(\"click\", () => {\r\n  SIDEBAR_EL.classList.toggle(\"toggled\");\r\n});\r\n\r\nconst defaultOpenMenus = document.querySelectorAll(\".menu-item.sub-menu.open\");\r\n\r\ndefaultOpenMenus.forEach(element => {\r\n  element.lastElementChild.style.display = \"block\";\r\n});\r\n\r\n/**\r\n * handle top level submenu click\r\n */\r\nFIRST_SUB_MENUS_BTN.forEach(element => {\r\n  element.addEventListener(\"click\", () => {\r\n    if (SIDEBAR_EL.classList.contains(\"collapsed\"))\r\n    PoppersInstance.togglePopper(element.nextElementSibling);else\r\n    {\r\n      const parentMenu = element.closest(\".menu.open-current-submenu\");\r\n      if (parentMenu)\r\n      parentMenu.\r\n      querySelectorAll(\":scope > ul > .menu-item.sub-menu > a\").\r\n      forEach(\r\n      (el) =>\r\n      window.getComputedStyle(el.nextElementSibling).display !==\r\n      \"none\" && slideUp(el.nextElementSibling));\r\n\r\n      slideToggle(element.nextElementSibling);\r\n    }\r\n  });\r\n});\r\n\r\n/**\r\n * handle inner submenu click\r\n */\r\nINNER_SUB_MENUS_BTN.forEach(element => {\r\n  element.addEventListener(\"click\", () => {\r\n    slideToggle(element.nextElementSibling);\r\n  });\r\n});\n\n//# sourceURL=webpack://reservas/./src/script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/script.js"]();
/******/ 	
/******/ })()
;